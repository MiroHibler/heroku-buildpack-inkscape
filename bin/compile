#!/usr/bin/env bash

# Fail fast
set -e
# Debug verbosely
#set -x

# Load config vars into environment (from https://devcenter.heroku.com/articles/buildpack-api)
export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir $3

# Enable verbose debugging if configured to -- though this has to come after
# we've loaded environment configs.
if [ -n "${BUILDPACK_VERBOSE+1}" ]; then
  set -x
fi

# Get the directory our app is checked out in (the "BUILD_DIR"), passed by Heroku
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}

# Clean up
# https://forums.gentoo.org/viewtopic-t-926740.html
echo "-----> Cleaning up..."
perl-cleaner --reallyall

#
# Install intltool
#
echo "-----> Installing intltool..."
mkdir -p "$BUILD_DIR/.intltool"
cd "$BUILD_DIR/.intltool"
wget https://launchpad.net/intltool/trunk/0.51.0/+download/intltool-0.51.0.tar.gz
tar -xf intltool-0.51.0.tar.gz
cd intltool-0.51.0
./configure
make

#
# Install Inkscape
#
echo "-----> Installing Inkscape..."
mkdir -p "$BUILD_DIR/.inkscape/"
cd "$BUILD_DIR/.inkscape/"
wget https://inkscape.org/gallery/item/10682/inkscape-0.92.1.tar_XlpI7qT.bz2
tar -xf inkscape-0.92.1.tar_XlpI7qT.bz2
cd inkscape-0.92.1
./autogen.sh
./configure
make
make install
export PATH="$BUILD_DIR/.inkscape/inkscape-0.92.1/bin":$PATH

# Test Inkscape
# https://github.com/duhast/heroku-inkscape-test
echo "-----> Testing Inkscape..."
# ldd $(which inkscape) | grep found

FILE1=/tmp/ink$RANDOM.png
FILE2=/tmp/ink$RANDOM.svg

inkscape --without-gui --file=./test/data/drawing.svg \
  --export-area-drawing --export-text-to-path --vacuum-defs --export-plain-svg=$FILE2 \
  --export-width=1024 --export-png=$FILE1

curl --upload-file $FILE1 https://transfer.sh/$(basename $FILE1)
curl --upload-file $FILE2 https://transfer.sh/$(basename $FILE2)
